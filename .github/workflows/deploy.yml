name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Install dependencies
        run: npm ci

      - name: Build registry
        run: npm run registry:build

      - name: Build with Next.js (Static Export)
        run: |
          npm run build
          echo "Build completed, checking directories..."
          ls -la
          
      - name: Prepare deployment directory
        run: |
          # Force Next.js to export static files
          npx next export || echo "Export command not available or failed"
          
          # Check if out directory was created
          if [ -d "out" ]; then
            echo "Found 'out' directory"
            cp public/CNAME out/ 2>/dev/null || true
            # Ensure registry.json is at root
            cp public/r/registry.json out/registry.json 2>/dev/null || true
          else
            echo "'out' directory not found, using public files as fallback"
            mkdir -p out
            cp -r public/* out/
            # Create a basic index.html if missing
            if [ ! -f "out/index.html" ]; then
              echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=/r/registry.json"></head><body>Redirecting to registry...</body></html>' > out/index.html
            fi
          fi
          echo "Contents of deployment directory:"
          ls -la out/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4